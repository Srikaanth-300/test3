# Autogenerated param section. Do not hand edit.
param {
group.0 {
name=Dynamically Reconfigurable Parameters
desc=See the [[dynamic_reconfigure]] package for details on dynamically reconfigurable parameters.
0.name= ~max_vel_x
0.default= 0.5
0.type= double
0.desc=The maximum x velocity for the robot in m/s Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
1.name= ~min_vel_x
1.default= 0.1
1.type= double
1.desc=The minimum x velocity for the robot in m/s Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
2.name= ~max_vel_theta
2.default= 1.0
2.type= double
2.desc=The absolute value of the maximum rotational velocity for the robot in rad/s Range: 0.0 to std::numeric_limits<double>::infinity()
3.name= ~min_in_place_vel_theta
3.default= 0.4
3.type= double
3.desc=The absolute value of the minimum in-place rotational velocity the controller will explore Range: 0.0 to 20.0
4.name= ~max_x_to_max_theta_scale_factor
4.default= 100.0
4.type= double
4.desc=Limits actual maximum rotational velocity to this factor multiplied by the local maximum linear velocity (rad/m) Range: 0.1 to 100.0
5.name= ~acc_lim_x
5.default= 2.5
5.type= double
5.desc=The acceleration limit of the robot in the x direction Range: 0.0 to 20.0
6.name= ~acc_lim_theta
6.default= 3.2
6.type= double
6.desc=The acceleration limit of the robot in the theta direction Range: 0.0 to 20.0
7.name= ~decel_lim_x
7.default= 0.0
7.type= double
7.desc=The deceleration limit of the robot in the x direction Range: 0.0 to 20.0
8.name= ~xy_goal_tolerance
8.default= 0.1
8.type= double
8.desc=Within what maximum distance we consider the robot to be in goal Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
9.name= ~yaw_goal_tolerance
9.default= 0.1
9.type= double
9.desc=Within what maximum angle difference we consider the robot to face goal direction Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
10.name= ~xy_vel_goal_tolerance
10.default= 1.0
10.type= double
10.desc=Maximum speed that robot can be moving at when latching goal Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
11.name= ~yaw_vel_goal_tolerance
11.default= 1.0
11.type= double
11.desc=Maximum speed that robot can be rotating at when latching goal Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
12.name= ~k1
12.default= 2.0
12.type= double
12.desc=Ratio of rate of change of theta to rate of change of R Range: 0.0 to 10.0
13.name= ~k2
13.default= 1.0
13.type= double
13.desc=How quickly we converge to the slow manifold Range: 0.0 to 10.0
14.name= ~beta
14.default= 0.4
14.type= double
14.desc=Parameters for selecting velocity from curvature Range: 0.0 to 10.0
15.name= ~lambda
15.default= 2.0
15.type= double
15.desc=Parameters for selecting velocity from curvature Range: 0.0 to 10.0
16.name= ~min_lookahead
16.default= 0.05
16.type= double
16.desc=Minimum distance to target goal Range: 0.0 to std::numeric_limits<double>::infinity()
17.name= ~max_lookahead
17.default= 1.0
17.type= double
17.desc=Maximum distance to target goal Range: 0.0 to std::numeric_limits<double>::infinity()
18.name= ~initial_rotate_tolerance
18.default= 0.1
18.type= double
18.desc=Tolerance for initial rotation to complete (0.0 to disable) Range: 0.0 to std::numeric_limits<double>::infinity()
19.name= ~prefer_final_rotation
19.default= False
19.type= bool
19.desc=Prefer an in-place rotation at the end pose when possible 
20.name= ~compute_orientations
20.default= True
20.type= bool
20.desc=Recompute plan orientations. Useful when global planner does not set proper orientations 
21.name= ~use_orientation_filter
21.default= True
21.type= bool
21.desc=Enables the orientation filter. Useful when global planner does not set proper orientations 
22.name= ~yaw_filter_tolerance
22.default= 0.0
22.type= double
22.desc=Maximum deviation from beeline allowed before a pose is filtered Range: 0.785 to std::numeric_limits<double>::infinity()
23.name= ~yaw_gap_tolerance
23.default= 0.0
23.type= double
23.desc=Maximum distance between poses in the filtered path Range: 0.25 to std::numeric_limits<double>::infinity()
24.name= ~latch_xy_goal_tolerance
24.default= False
24.type= bool
24.desc=When goal has been reached, just fix heading 
25.name= ~scaling_vel_x
25.default= 0.5
25.type= double
25.desc=Above this velocity, the footprint will be scaled up Range: 0.0 to std::numeric_limits<double>::infinity()
26.name= ~scaling_factor
26.default= 0.0
26.type= double
26.desc=Amount to scale footprint when at max velocity Range: 0.0 to std::numeric_limits<double>::infinity()
27.name= ~scaling_step
27.default= 0.1
27.type= double
27.desc=Amount to reduce x velocity when iteratively reducing velocity Range: 0.01 to 1.0
}
}
# End of autogenerated section. You may edit below.
