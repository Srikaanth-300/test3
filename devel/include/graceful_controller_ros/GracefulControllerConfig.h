//#line 2 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the graceful_controller package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __graceful_controller__GRACEFULCONTROLLERCONFIG_H__
#define __graceful_controller__GRACEFULCONTROLLERCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace graceful_controller
{
  class GracefulControllerConfigStatics;

  class GracefulControllerConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      virtual ~AbstractParamDescription() = default;

      virtual void clamp(GracefulControllerConfig &config, const GracefulControllerConfig &max, const GracefulControllerConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const GracefulControllerConfig &config1, const GracefulControllerConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, GracefulControllerConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const GracefulControllerConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, GracefulControllerConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const GracefulControllerConfig &config) const = 0;
      virtual void getValue(const GracefulControllerConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T GracefulControllerConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T GracefulControllerConfig::* field;

      virtual void clamp(GracefulControllerConfig &config, const GracefulControllerConfig &max, const GracefulControllerConfig &min) const override
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const GracefulControllerConfig &config1, const GracefulControllerConfig &config2) const override
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, GracefulControllerConfig &config) const override
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const GracefulControllerConfig &config) const override
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, GracefulControllerConfig &config) const override
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const GracefulControllerConfig &config) const override
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const GracefulControllerConfig &config, boost::any &val) const override
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      virtual ~AbstractGroupDescription() = default;

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, GracefulControllerConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, GracefulControllerConfig &top) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const override
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<GracefulControllerConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(GracefulControllerConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("max_vel_x"==(*_i)->name){max_vel_x = boost::any_cast<double>(val);}
        if("min_vel_x"==(*_i)->name){min_vel_x = boost::any_cast<double>(val);}
        if("max_vel_theta"==(*_i)->name){max_vel_theta = boost::any_cast<double>(val);}
        if("min_in_place_vel_theta"==(*_i)->name){min_in_place_vel_theta = boost::any_cast<double>(val);}
        if("max_x_to_max_theta_scale_factor"==(*_i)->name){max_x_to_max_theta_scale_factor = boost::any_cast<double>(val);}
        if("acc_lim_x"==(*_i)->name){acc_lim_x = boost::any_cast<double>(val);}
        if("acc_lim_theta"==(*_i)->name){acc_lim_theta = boost::any_cast<double>(val);}
        if("decel_lim_x"==(*_i)->name){decel_lim_x = boost::any_cast<double>(val);}
        if("xy_goal_tolerance"==(*_i)->name){xy_goal_tolerance = boost::any_cast<double>(val);}
        if("yaw_goal_tolerance"==(*_i)->name){yaw_goal_tolerance = boost::any_cast<double>(val);}
        if("xy_vel_goal_tolerance"==(*_i)->name){xy_vel_goal_tolerance = boost::any_cast<double>(val);}
        if("yaw_vel_goal_tolerance"==(*_i)->name){yaw_vel_goal_tolerance = boost::any_cast<double>(val);}
        if("k1"==(*_i)->name){k1 = boost::any_cast<double>(val);}
        if("k2"==(*_i)->name){k2 = boost::any_cast<double>(val);}
        if("beta"==(*_i)->name){beta = boost::any_cast<double>(val);}
        if("lambda"==(*_i)->name){lambda = boost::any_cast<double>(val);}
        if("min_lookahead"==(*_i)->name){min_lookahead = boost::any_cast<double>(val);}
        if("max_lookahead"==(*_i)->name){max_lookahead = boost::any_cast<double>(val);}
        if("initial_rotate_tolerance"==(*_i)->name){initial_rotate_tolerance = boost::any_cast<double>(val);}
        if("prefer_final_rotation"==(*_i)->name){prefer_final_rotation = boost::any_cast<bool>(val);}
        if("compute_orientations"==(*_i)->name){compute_orientations = boost::any_cast<bool>(val);}
        if("use_orientation_filter"==(*_i)->name){use_orientation_filter = boost::any_cast<bool>(val);}
        if("yaw_filter_tolerance"==(*_i)->name){yaw_filter_tolerance = boost::any_cast<double>(val);}
        if("yaw_gap_tolerance"==(*_i)->name){yaw_gap_tolerance = boost::any_cast<double>(val);}
        if("latch_xy_goal_tolerance"==(*_i)->name){latch_xy_goal_tolerance = boost::any_cast<bool>(val);}
        if("scaling_vel_x"==(*_i)->name){scaling_vel_x = boost::any_cast<double>(val);}
        if("scaling_factor"==(*_i)->name){scaling_factor = boost::any_cast<double>(val);}
        if("scaling_step"==(*_i)->name){scaling_step = boost::any_cast<double>(val);}
      }
    }

    double max_vel_x;
double min_vel_x;
double max_vel_theta;
double min_in_place_vel_theta;
double max_x_to_max_theta_scale_factor;
double acc_lim_x;
double acc_lim_theta;
double decel_lim_x;
double xy_goal_tolerance;
double yaw_goal_tolerance;
double xy_vel_goal_tolerance;
double yaw_vel_goal_tolerance;
double k1;
double k2;
double beta;
double lambda;
double min_lookahead;
double max_lookahead;
double initial_rotate_tolerance;
bool prefer_final_rotation;
bool compute_orientations;
bool use_orientation_filter;
double yaw_filter_tolerance;
double yaw_gap_tolerance;
bool latch_xy_goal_tolerance;
double scaling_vel_x;
double scaling_factor;
double scaling_step;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_vel_x;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_vel_x;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_vel_theta;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_in_place_vel_theta;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_x_to_max_theta_scale_factor;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double acc_lim_x;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double acc_lim_theta;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double decel_lim_x;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double xy_goal_tolerance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double yaw_goal_tolerance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double xy_vel_goal_tolerance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double yaw_vel_goal_tolerance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double k1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double k2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double beta;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double lambda;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_lookahead;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_lookahead;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double initial_rotate_tolerance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool prefer_final_rotation;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool compute_orientations;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool use_orientation_filter;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double yaw_filter_tolerance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double yaw_gap_tolerance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool latch_xy_goal_tolerance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double scaling_vel_x;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double scaling_factor;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double scaling_step;
//#line 231 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("GracefulControllerConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const GracefulControllerConfig &__max__ = __getMax__();
      const GracefulControllerConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const GracefulControllerConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const GracefulControllerConfig &__getDefault__();
    static const GracefulControllerConfig &__getMax__();
    static const GracefulControllerConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const GracefulControllerConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void GracefulControllerConfig::ParamDescription<std::string>::clamp(GracefulControllerConfig &config, const GracefulControllerConfig &max, const GracefulControllerConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class GracefulControllerConfigStatics
  {
    friend class GracefulControllerConfig;

    GracefulControllerConfigStatics()
    {
GracefulControllerConfig::GroupDescription<GracefulControllerConfig::DEFAULT, GracefulControllerConfig> Default("Default", "", 0, 0, true, &GracefulControllerConfig::groups);
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_vel_x = -std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_vel_x = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_vel_x = 0.5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("max_vel_x", "double", 0, "The maximum x velocity for the robot in m/s", "", &GracefulControllerConfig::max_vel_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("max_vel_x", "double", 0, "The maximum x velocity for the robot in m/s", "", &GracefulControllerConfig::max_vel_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_vel_x = -std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_vel_x = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_vel_x = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("min_vel_x", "double", 0, "The minimum x velocity for the robot in m/s", "", &GracefulControllerConfig::min_vel_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("min_vel_x", "double", 0, "The minimum x velocity for the robot in m/s", "", &GracefulControllerConfig::min_vel_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_vel_theta = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_vel_theta = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_vel_theta = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("max_vel_theta", "double", 0, "The absolute value of the maximum rotational velocity for the robot in rad/s", "", &GracefulControllerConfig::max_vel_theta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("max_vel_theta", "double", 0, "The absolute value of the maximum rotational velocity for the robot in rad/s", "", &GracefulControllerConfig::max_vel_theta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_in_place_vel_theta = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_in_place_vel_theta = 20.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_in_place_vel_theta = 0.4;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("min_in_place_vel_theta", "double", 0, "The absolute value of the minimum in-place rotational velocity the controller will explore", "", &GracefulControllerConfig::min_in_place_vel_theta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("min_in_place_vel_theta", "double", 0, "The absolute value of the minimum in-place rotational velocity the controller will explore", "", &GracefulControllerConfig::min_in_place_vel_theta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_x_to_max_theta_scale_factor = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_x_to_max_theta_scale_factor = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_x_to_max_theta_scale_factor = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("max_x_to_max_theta_scale_factor", "double", 0, "Limits actual maximum rotational velocity to this factor multiplied by the local maximum linear velocity (rad/m)", "", &GracefulControllerConfig::max_x_to_max_theta_scale_factor)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("max_x_to_max_theta_scale_factor", "double", 0, "Limits actual maximum rotational velocity to this factor multiplied by the local maximum linear velocity (rad/m)", "", &GracefulControllerConfig::max_x_to_max_theta_scale_factor)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.acc_lim_x = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.acc_lim_x = 20.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.acc_lim_x = 2.5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("acc_lim_x", "double", 0, "The acceleration limit of the robot in the x direction", "", &GracefulControllerConfig::acc_lim_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("acc_lim_x", "double", 0, "The acceleration limit of the robot in the x direction", "", &GracefulControllerConfig::acc_lim_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.acc_lim_theta = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.acc_lim_theta = 20.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.acc_lim_theta = 3.2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("acc_lim_theta", "double", 0, "The acceleration limit of the robot in the theta direction", "", &GracefulControllerConfig::acc_lim_theta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("acc_lim_theta", "double", 0, "The acceleration limit of the robot in the theta direction", "", &GracefulControllerConfig::acc_lim_theta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.decel_lim_x = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.decel_lim_x = 20.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.decel_lim_x = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("decel_lim_x", "double", 0, "The deceleration limit of the robot in the x direction", "", &GracefulControllerConfig::decel_lim_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("decel_lim_x", "double", 0, "The deceleration limit of the robot in the x direction", "", &GracefulControllerConfig::decel_lim_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.xy_goal_tolerance = -std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.xy_goal_tolerance = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.xy_goal_tolerance = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("xy_goal_tolerance", "double", 0, "Within what maximum distance we consider the robot to be in goal", "", &GracefulControllerConfig::xy_goal_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("xy_goal_tolerance", "double", 0, "Within what maximum distance we consider the robot to be in goal", "", &GracefulControllerConfig::xy_goal_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.yaw_goal_tolerance = -std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.yaw_goal_tolerance = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.yaw_goal_tolerance = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("yaw_goal_tolerance", "double", 0, "Within what maximum angle difference we consider the robot to face goal direction", "", &GracefulControllerConfig::yaw_goal_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("yaw_goal_tolerance", "double", 0, "Within what maximum angle difference we consider the robot to face goal direction", "", &GracefulControllerConfig::yaw_goal_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.xy_vel_goal_tolerance = -std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.xy_vel_goal_tolerance = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.xy_vel_goal_tolerance = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("xy_vel_goal_tolerance", "double", 0, "Maximum speed that robot can be moving at when latching goal", "", &GracefulControllerConfig::xy_vel_goal_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("xy_vel_goal_tolerance", "double", 0, "Maximum speed that robot can be moving at when latching goal", "", &GracefulControllerConfig::xy_vel_goal_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.yaw_vel_goal_tolerance = -std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.yaw_vel_goal_tolerance = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.yaw_vel_goal_tolerance = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("yaw_vel_goal_tolerance", "double", 0, "Maximum speed that robot can be rotating at when latching goal", "", &GracefulControllerConfig::yaw_vel_goal_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("yaw_vel_goal_tolerance", "double", 0, "Maximum speed that robot can be rotating at when latching goal", "", &GracefulControllerConfig::yaw_vel_goal_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.k1 = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.k1 = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.k1 = 2.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("k1", "double", 0, "Ratio of rate of change of theta to rate of change of R", "", &GracefulControllerConfig::k1)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("k1", "double", 0, "Ratio of rate of change of theta to rate of change of R", "", &GracefulControllerConfig::k1)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.k2 = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.k2 = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.k2 = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("k2", "double", 0, "How quickly we converge to the slow manifold", "", &GracefulControllerConfig::k2)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("k2", "double", 0, "How quickly we converge to the slow manifold", "", &GracefulControllerConfig::k2)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.beta = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.beta = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.beta = 0.4;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("beta", "double", 0, "Parameters for selecting velocity from curvature", "", &GracefulControllerConfig::beta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("beta", "double", 0, "Parameters for selecting velocity from curvature", "", &GracefulControllerConfig::beta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.lambda = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.lambda = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.lambda = 2.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("lambda", "double", 0, "Parameters for selecting velocity from curvature", "", &GracefulControllerConfig::lambda)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("lambda", "double", 0, "Parameters for selecting velocity from curvature", "", &GracefulControllerConfig::lambda)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_lookahead = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_lookahead = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_lookahead = 0.05;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("min_lookahead", "double", 0, "Minimum distance to target goal", "", &GracefulControllerConfig::min_lookahead)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("min_lookahead", "double", 0, "Minimum distance to target goal", "", &GracefulControllerConfig::min_lookahead)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_lookahead = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_lookahead = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_lookahead = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("max_lookahead", "double", 0, "Maximum distance to target goal", "", &GracefulControllerConfig::max_lookahead)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("max_lookahead", "double", 0, "Maximum distance to target goal", "", &GracefulControllerConfig::max_lookahead)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.initial_rotate_tolerance = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.initial_rotate_tolerance = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.initial_rotate_tolerance = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("initial_rotate_tolerance", "double", 0, "Tolerance for initial rotation to complete (0.0 to disable)", "", &GracefulControllerConfig::initial_rotate_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("initial_rotate_tolerance", "double", 0, "Tolerance for initial rotation to complete (0.0 to disable)", "", &GracefulControllerConfig::initial_rotate_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.prefer_final_rotation = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.prefer_final_rotation = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.prefer_final_rotation = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<bool>("prefer_final_rotation", "bool", 0, "Prefer an in-place rotation at the end pose when possible", "", &GracefulControllerConfig::prefer_final_rotation)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<bool>("prefer_final_rotation", "bool", 0, "Prefer an in-place rotation at the end pose when possible", "", &GracefulControllerConfig::prefer_final_rotation)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.compute_orientations = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.compute_orientations = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.compute_orientations = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<bool>("compute_orientations", "bool", 0, "Recompute plan orientations. Useful when global planner does not set proper orientations", "", &GracefulControllerConfig::compute_orientations)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<bool>("compute_orientations", "bool", 0, "Recompute plan orientations. Useful when global planner does not set proper orientations", "", &GracefulControllerConfig::compute_orientations)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.use_orientation_filter = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.use_orientation_filter = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.use_orientation_filter = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<bool>("use_orientation_filter", "bool", 0, "Enables the orientation filter. Useful when global planner does not set proper orientations", "", &GracefulControllerConfig::use_orientation_filter)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<bool>("use_orientation_filter", "bool", 0, "Enables the orientation filter. Useful when global planner does not set proper orientations", "", &GracefulControllerConfig::use_orientation_filter)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.yaw_filter_tolerance = 0.785;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.yaw_filter_tolerance = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.yaw_filter_tolerance = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("yaw_filter_tolerance", "double", 0, "Maximum deviation from beeline allowed before a pose is filtered", "", &GracefulControllerConfig::yaw_filter_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("yaw_filter_tolerance", "double", 0, "Maximum deviation from beeline allowed before a pose is filtered", "", &GracefulControllerConfig::yaw_filter_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.yaw_gap_tolerance = 0.25;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.yaw_gap_tolerance = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.yaw_gap_tolerance = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("yaw_gap_tolerance", "double", 0, "Maximum distance between poses in the filtered path", "", &GracefulControllerConfig::yaw_gap_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("yaw_gap_tolerance", "double", 0, "Maximum distance between poses in the filtered path", "", &GracefulControllerConfig::yaw_gap_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.latch_xy_goal_tolerance = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.latch_xy_goal_tolerance = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.latch_xy_goal_tolerance = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<bool>("latch_xy_goal_tolerance", "bool", 0, "When goal has been reached, just fix heading", "", &GracefulControllerConfig::latch_xy_goal_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<bool>("latch_xy_goal_tolerance", "bool", 0, "When goal has been reached, just fix heading", "", &GracefulControllerConfig::latch_xy_goal_tolerance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.scaling_vel_x = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.scaling_vel_x = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.scaling_vel_x = 0.5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("scaling_vel_x", "double", 0, "Above this velocity, the footprint will be scaled up", "", &GracefulControllerConfig::scaling_vel_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("scaling_vel_x", "double", 0, "Above this velocity, the footprint will be scaled up", "", &GracefulControllerConfig::scaling_vel_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.scaling_factor = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.scaling_factor = std::numeric_limits<double>::infinity();
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.scaling_factor = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("scaling_factor", "double", 0, "Amount to scale footprint when at max velocity", "", &GracefulControllerConfig::scaling_factor)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("scaling_factor", "double", 0, "Amount to scale footprint when at max velocity", "", &GracefulControllerConfig::scaling_factor)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.scaling_step = 0.01;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.scaling_step = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.scaling_step = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("scaling_step", "double", 0, "Amount to reduce x velocity when iteratively reducing velocity", "", &GracefulControllerConfig::scaling_step)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(GracefulControllerConfig::AbstractParamDescriptionConstPtr(new GracefulControllerConfig::ParamDescription<double>("scaling_step", "double", 0, "Amount to reduce x velocity when iteratively reducing velocity", "", &GracefulControllerConfig::scaling_step)));
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(GracefulControllerConfig::AbstractGroupDescriptionConstPtr(new GracefulControllerConfig::GroupDescription<GracefulControllerConfig::DEFAULT, GracefulControllerConfig>(Default)));
//#line 369 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<GracefulControllerConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<GracefulControllerConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<GracefulControllerConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    GracefulControllerConfig __max__;
    GracefulControllerConfig __min__;
    GracefulControllerConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const GracefulControllerConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static GracefulControllerConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &GracefulControllerConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const GracefulControllerConfig &GracefulControllerConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const GracefulControllerConfig &GracefulControllerConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const GracefulControllerConfig &GracefulControllerConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<GracefulControllerConfig::AbstractParamDescriptionConstPtr> &GracefulControllerConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<GracefulControllerConfig::AbstractGroupDescriptionConstPtr> &GracefulControllerConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const GracefulControllerConfigStatics *GracefulControllerConfig::__get_statics__()
  {
    const static GracefulControllerConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = GracefulControllerConfigStatics::get_instance();

    return statics;
  }


}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __GRACEFULCONTROLLERRECONFIGURATOR_H__
